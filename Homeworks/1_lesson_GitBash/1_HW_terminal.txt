Первое ДЗ 
Linux terminal (GitBash) commands

1) Посмотреть где я                              ===  % pwd
2) Создать папку                                 ===  % mkdir folder
3) Зайти в папку                                 ===  % cd folder
4) Создать 3 папки                               ===  % mkdir 1 2 3
5) Зайти в любую папку                           ===  % cd 1
6) Создать 5 файлов (3 txt, 2 json)              ===  % touch 111.txt 222.txt 333.txt 123.json 456.json
7) Создать 3 папки                               ===  % mkdir 4 5 6
8. Вывести список содержимого папки              ===  % ls -a
9) + Открыть любой txt файл                      ===  % vim 111.txt
10) + написать туда что-нибудь, любой текст      === i
11) + сохранить и выйти                          === esc --> :wq
12) Выйти из папки на уровень выше               === % cd ..

Структура директории на данный момент:
Folder__
	1__
		111.txt
		222.txt
		333.txt
		123.json
		456.json
		4__
		5__
		6__
 	2__
	3__

—---------------
13) переместить любые 2 файла, которые вы создали, в любую другую папку.
====
1. Захожу в папку, где лежит файл           ===   % cd 1
2. Перемещаю файл 111.txt в папку 4         ===   % mv 111.txt 4/
..
1. Файл 222.txt переместить в папку 2/      ===   % mv 222.txt ../2/
..
1. Сразу 2 файла (в папку 6)                ===   % mv 123.json 456.json 6

14) скопировать любые 2 файла, которые вы создали, в любую другую папку.
1. Скопировать 123.json в папку 5           ===   % cp 123.json 5/
..
1. Скопировать 456.json в папку 3           ===   % cp 456.json ../3/
..
1. Скопировать 123.json 456.json в папку 1  ===   % cp 123.json 456.json ../  # сначала зашла в папку с файлами (папка 6) и файла скопировала в папку выше

Структура директории стала такой:
Folder__
	1__
		333.txt
		123.json
		456.json
		4__
			111.txt
		5__
			123.json
		6__
			123.json
			456.json
 	2__
		222.txt
	3__
		456.json

—---------------

15) Найти файл по имени
                             ===   % find . -name "333.txt"
./333.txt
                             ===   % find . -name "111.txt"
./4/111.txt
                             ===   % find ../ -name "222.txt"
..//2/222.txt

16) просмотреть содержимое в реальном времени (команда grep) изучите как она работает.    ===   % grep -r "grep" *
Нашлось кол-во вхождений слова "grep" в текущем каталоге с его подкаталогами:
1_lesson_GitBash/1_HW_terminal.txt:16) просмотреть содержимое в реальном времени (команда grep) изучите как она работает.
1_lesson_GitBash/README.md:16) просмотреть содержимое в реальном времени (команда grep) изучите как она работает.


17) вывести несколько (3) первых строк из текстового файла                                ===   % head -n3 /путьполностью/файл.разрешенение
* команда выдает ошибку: No such file or directory, если не указать путь полностью? Даже если находишься в нужной папке
18) вывести несколько (3) последних строк из текстового файла                             ===   % tail -n3 /путьполностью/файл.разрешенение
19) просмотреть содержимое длинного файла (команда less) изучите как она работает         ===   % less файл.разрешенение
* выводит в новом окне терминала. При изменении файла, в терминале информация не обновляется.
20) вывести дату и время                                                                  ===   % date
вторник,  1 февраля 2022 г. 20:55:47 (MSK)


_________________________

 Задание * :
1) Отправить http запрос на сервер.
http://162.55.220.72:5005/terminal-hw-request
1. Получить содержимое URL         ===   % curl http://162.55.220.72:5005/terminal-hw-request
Выход: {"Intro":"Hello!! This is your the first response from server","Tasks":{"Task_1":"Send the next URL in terminal: http://162.55.220.72:5005/get_method?name=(set_your_String)&age=(set_your_number)","result":["Your_String","Your_number"]}}
2. Отправить запрос на сервер      ===   % curl "http://162.55.220.72:5005/get_method?name=Olesya&age=25"
["Olesya","25"]
* ссылку нужно взять в кавычки, т.к. & - спецсимвол в Bash

2) Написать скрипт который выполнит автоматически пункты 3, 4, 5, 6, 7, 8, 13
1. Создан файл скрипта                 ===   % vim script.txt
2. Файл сделать исполняемым в linux    ===   % chmod ugo+x script.txt
3. Запустить скрипт                    ===   % ./script.txt
4. Сам скрпит:
#!/bin/bash

cd folder
mkdir folder1 folder2 folder3
cd folder3
touch file1.txt file2.txt file3.txt file4.json file5.json
mkdir folder4 folder5 folder6
ls -a
mv file1.txt file2.txt ../folder2

grep 
Записать логи по паттерну в отдельный файл     ===   % tail -F f2.txt | grep --line-buffered 21:05 >> test_log1.txt

Записать логи по паттерну в отдельный файл с отслеживанием того, что не работает    ===   % tail -F f2.txt | grep --line-buffered 21:05 >> test_log1.txt | tail -f test_log1.txt

